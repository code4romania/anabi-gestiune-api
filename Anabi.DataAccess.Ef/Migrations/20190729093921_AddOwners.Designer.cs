// <auto-generated />
using System;
using Anabi.DataAccess.Ef;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Anabi.DataAccess.Ef.Migrations
{
    [DbContext(typeof(AnabiContext))]
    [Migration("20190729093921_AddOwners")]
    partial class AddOwners
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.AddressDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate");

                    b.Property<string>("Building")
                        .HasMaxLength(10);

                    b.Property<string>("City")
                        .HasMaxLength(30);

                    b.Property<int>("CountyId");

                    b.Property<string>("Description")
                        .HasMaxLength(300);

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("CountyId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.AssetDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("AddressId");

                    b.Property<int>("CategoryId");

                    b.Property<int?>("DecisionId");

                    b.Property<string>("Description")
                        .HasMaxLength(2000);

                    b.Property<string>("Identifier")
                        .HasMaxLength(100);

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<string>("MeasureUnit")
                        .HasMaxLength(10);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<decimal?>("NecessaryVolume")
                        .HasColumnType("decimal(20, 2)");

                    b.Property<int?>("NrOfObjects");

                    b.Property<string>("Remarks")
                        .HasMaxLength(2000);

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DecisionId");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.AssetDefendantDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("AssetId");

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<int>("PersonId");

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("PersonId");

                    b.ToTable("AssetDefendants");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.AssetOwnerDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("AssetId");

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<int>("PersonId");

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("PersonId");

                    b.ToTable("AssetOwners");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.AssetStorageSpaceDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("AssetId");

                    b.Property<DateTime>("EntryDate");

                    b.Property<DateTime?>("ExitDate");

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<int>("StorageSpaceId");

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("StorageSpaceId");

                    b.ToTable("AssetStorageSpaces");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.CategoryDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasMaxLength(2000);

                    b.Property<string>("ForEntity")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<int?>("ParentId");

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("Code", "ForEntity")
                        .IsUnique()
                        .HasName("indx_code_forentity");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.CountyDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abreviation")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("Abreviation")
                        .IsUnique();

                    b.ToTable("Counties");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.CrimeTypeDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("CrimeName")
                        .IsRequired()
                        .HasMaxLength(400);

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("CrimeName")
                        .IsUnique();

                    b.ToTable("CrimeTypes");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.DecisionDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("indx_uq_Decision");

                    b.ToTable("Decisions");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.HistoricalStageDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("ActualValue")
                        .HasColumnType("Decimal(20, 2)");

                    b.Property<string>("ActualValueCurrency")
                        .HasMaxLength(3);

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("AssetId");

                    b.Property<string>("AssetState")
                        .HasMaxLength(100);

                    b.Property<int?>("CrimeTypeId");

                    b.Property<DateTime>("DecisionDate")
                        .HasColumnType("Date");

                    b.Property<string>("DecisionNumber")
                        .HasMaxLength(50);

                    b.Property<int?>("DecizieId");

                    b.Property<DateTime?>("DefinitiveDate");

                    b.Property<decimal?>("EstimatedAmount")
                        .HasColumnType("Decimal(20,2)");

                    b.Property<string>("EstimatedAmountCurrency")
                        .HasMaxLength(3);

                    b.Property<string>("EvaluationCommittee");

                    b.Property<DateTime?>("EvaluationCommitteeDesignationDate");

                    b.Property<string>("EvaluationCommitteePresident")
                        .HasMaxLength(200);

                    b.Property<string>("FileNumber")
                        .HasMaxLength(200);

                    b.Property<string>("FileNumberParquet")
                        .HasMaxLength(200);

                    b.Property<int?>("InstitutionId");

                    b.Property<bool?>("IsDefinitive");

                    b.Property<DateTime?>("LastActivity");

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<string>("LegalBasis")
                        .HasMaxLength(200);

                    b.Property<int?>("OwnerId")
                        .HasColumnType("Int");

                    b.Property<string>("PersonResponsible")
                        .HasMaxLength(200);

                    b.Property<int?>("PrecautionaryMeasureId");

                    b.Property<DateTime?>("ReceivingDate");

                    b.Property<DateTime?>("RecoveryApplicationDate");

                    b.Property<string>("RecoveryApplicationNumber")
                        .HasMaxLength(100);

                    b.Property<int?>("RecoveryBeneficiaryId");

                    b.Property<string>("RecoveryCommittee");

                    b.Property<DateTime?>("RecoveryCommitteeDesignationDate");

                    b.Property<string>("RecoveryCommitteePresident")
                        .HasMaxLength(200);

                    b.Property<int?>("RecoveryDocumentType");

                    b.Property<string>("RecoveryIssuingInstitution")
                        .HasMaxLength(200);

                    b.Property<string>("RecoveryState");

                    b.Property<DateTime?>("SendToAuthoritiesDate");

                    b.Property<bool?>("SentOnEmail");

                    b.Property<string>("Source")
                        .HasMaxLength(500);

                    b.Property<int>("StageId");

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("AssetId");

                    b.HasIndex("CrimeTypeId");

                    b.HasIndex("DecizieId");

                    b.HasIndex("InstitutionId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("PrecautionaryMeasureId");

                    b.HasIndex("RecoveryBeneficiaryId");

                    b.HasIndex("StageId");

                    b.ToTable("HistoricalStages");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.IdentifierDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("IdentifierType")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("IsForPerson");

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Identifiers");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.InstitutionDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("BusinessId")
                        .HasColumnType("int");

                    b.Property<string>("ContactData")
                        .HasColumnType("varchar(8000)");

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Institutions");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.PersonDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("AddressId");

                    b.Property<DateTime?>("Birthdate");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50);

                    b.Property<string>("IdNumber")
                        .HasMaxLength(6);

                    b.Property<string>("IdSerie")
                        .HasMaxLength(2);

                    b.Property<string>("Identification")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("IdentifierId");

                    b.Property<bool>("IsPerson");

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Nationality")
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("Identification")
                        .IsUnique()
                        .HasName("indx_uq_Persons");

                    b.HasIndex("IdentifierId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.PrecautionaryMeasureDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("Code");

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("PrecautionaryMeasures");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.RecoveryBeneficiaryDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("uq_RecoveryBeneficiaryName");

                    b.ToTable("RecoveryBeneficiaries");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.StageDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description");

                    b.Property<bool>("IsFinal");

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("ParentId");

                    b.Property<int?>("StageCategory");

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("indx_uq_stagename");

                    b.HasIndex("ParentId");

                    b.ToTable("Stages");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.StorageSpaceDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("AddressId");

                    b.Property<string>("Description")
                        .HasMaxLength(2000);

                    b.Property<DateTime?>("LastChangeDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("StorageSpacesType");

                    b.Property<string>("UserCodeAdd")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("UserCodeLastChange")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("AddressId")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("uq_StorageSpaceName");

                    b.ToTable("StorageSpaces");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.UserDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(8000)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(5000);

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("varchar(8000)");

                    b.Property<string>("UserCode")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserCode")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.AddressDb", b =>
                {
                    b.HasOne("Anabi.DataAccess.Ef.DbModels.CountyDb", "County")
                        .WithMany("Addresses")
                        .HasForeignKey("CountyId")
                        .HasConstraintName("FK_Addresses_Counties")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.AssetDb", b =>
                {
                    b.HasOne("Anabi.DataAccess.Ef.DbModels.AddressDb", "Address")
                        .WithMany("Assets")
                        .HasForeignKey("AddressId")
                        .HasConstraintName("FK_Assets_Addresses")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.CategoryDb", "Category")
                        .WithMany("Assets")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Assets_Categories")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.DecisionDb", "CurrentDecision")
                        .WithMany("Assets")
                        .HasForeignKey("DecisionId")
                        .HasConstraintName("FK_Assets_Decisions")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.AssetDefendantDb", b =>
                {
                    b.HasOne("Anabi.DataAccess.Ef.DbModels.AssetDb", "Asset")
                        .WithMany("Defendants")
                        .HasForeignKey("AssetId")
                        .HasConstraintName("FK_Assets_AssetDefendant")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.PersonDb", "Defendant")
                        .WithMany("Defendants")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("FK_Person_AssetDefendant")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.AssetOwnerDb", b =>
                {
                    b.HasOne("Anabi.DataAccess.Ef.DbModels.AssetDb", "Asset")
                        .WithMany("Owners")
                        .HasForeignKey("AssetId")
                        .HasConstraintName("FK_Assets_AssetOwner")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.PersonDb", "Owner")
                        .WithMany("Owners")
                        .HasForeignKey("PersonId")
                        .HasConstraintName("FK_Person_AssetOwner")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.AssetStorageSpaceDb", b =>
                {
                    b.HasOne("Anabi.DataAccess.Ef.DbModels.AssetDb", "Asset")
                        .WithMany("AssetsStorageSpaces")
                        .HasForeignKey("AssetId")
                        .HasConstraintName("FK_AssetsStorageSpaces_Assets")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.StorageSpaceDb", "StorageSpace")
                        .WithMany("AssetsStorageSpaces")
                        .HasForeignKey("StorageSpaceId")
                        .HasConstraintName("FK_AssetsStorageSpaces_StorageSpaces")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.CategoryDb", b =>
                {
                    b.HasOne("Anabi.DataAccess.Ef.DbModels.CategoryDb", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Categories_Parent")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.HistoricalStageDb", b =>
                {
                    b.HasOne("Anabi.DataAccess.Ef.DbModels.AssetDb", "Asset")
                        .WithMany("HistoricalStages")
                        .HasForeignKey("AssetId")
                        .HasConstraintName("FK_HistoricalStages_Assets")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.CrimeTypeDb", "CrimeType")
                        .WithMany()
                        .HasForeignKey("CrimeTypeId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.DecisionDb", "Decision")
                        .WithMany("HistoricalStages")
                        .HasForeignKey("DecizieId")
                        .HasConstraintName("FK_HistoricalStages_Decisions")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.InstitutionDb", "IssuingInstitution")
                        .WithMany("HistoricalStages")
                        .HasForeignKey("InstitutionId")
                        .HasConstraintName("FK_HistoricalStages_Institutions")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.PersonDb", "Person")
                        .WithMany("HistoricalStages")
                        .HasForeignKey("OwnerId")
                        .HasConstraintName("FK_OwnerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.PrecautionaryMeasureDb", "PrecautionaryMeasure")
                        .WithMany("Stages")
                        .HasForeignKey("PrecautionaryMeasureId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.RecoveryBeneficiaryDb", "RecoveryBeneficiary")
                        .WithMany()
                        .HasForeignKey("RecoveryBeneficiaryId");

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.StageDb", "Stage")
                        .WithMany("HistoricalStages")
                        .HasForeignKey("StageId")
                        .HasConstraintName("FK_HistoricalStages_Stages")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.PersonDb", b =>
                {
                    b.HasOne("Anabi.DataAccess.Ef.DbModels.AddressDb", "Address")
                        .WithMany("Persons")
                        .HasForeignKey("AddressId")
                        .HasConstraintName("FK_Persons_Addresses")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Anabi.DataAccess.Ef.DbModels.IdentifierDb", "Identifier")
                        .WithMany("Persons")
                        .HasForeignKey("IdentifierId")
                        .HasConstraintName("FK_Persons_Identifiers")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.StageDb", b =>
                {
                    b.HasOne("Anabi.DataAccess.Ef.DbModels.StageDb", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("Anabi.DataAccess.Ef.DbModels.StorageSpaceDb", b =>
                {
                    b.HasOne("Anabi.DataAccess.Ef.DbModels.AddressDb", "Address")
                        .WithOne("StorageRoom")
                        .HasForeignKey("Anabi.DataAccess.Ef.DbModels.StorageSpaceDb", "AddressId")
                        .HasConstraintName("FK_StorageSpaces_Addresses")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
